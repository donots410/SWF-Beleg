/*
 * generated by Xtext 2.13.0
 */
package org.xtext.example.mydsl.ui.labeling

import com.google.inject.Inject
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider
import org.xtext.example.mydsl.myDsl.Prologdsl
import org.xtext.example.mydsl.myDsl.Functor
import org.xtext.example.mydsl.myDsl.Folge
import org.xtext.example.mydsl.myDsl.ListOpt3
import org.xtext.example.mydsl.myDsl.ListOpt2
import org.xtext.example.mydsl.myDsl.ListOpt1
import org.xtext.example.mydsl.myDsl.Rest
import org.xtext.example.mydsl.myDsl.Program
import org.xtext.example.mydsl.myDsl.Exquery
import org.xtext.example.mydsl.myDsl.Query
import org.xtext.example.mydsl.myDsl.Clause
import org.xtext.example.mydsl.myDsl.Fact
import org.xtext.example.mydsl.myDsl.Rule
import org.xtext.example.mydsl.myDsl.Predicate
import org.xtext.example.mydsl.myDsl.Term
import org.xtext.example.mydsl.myDsl.Atom
import org.xtext.example.mydsl.myDsl.List

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#label-provider
 */
class MyDslLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	new(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:
	
//	def text(Greeting ele) {
//		'A greeting to ' + ele.name
//	}
//
//	def image(Greeting ele) {
//		'Greeting.gif'
//	}
	
	def text(Prologdsl ele) {
		return 'PrologDSL'
	}
	def text(Program ele) {
		return 'Program'
	}
	def text(Exquery ele) {
		return 'Exquery'
	}
	def text(Query ele) {
		return 'Query'
	}
	def text(Clause ele) {
		return 'Clause'
	}
	def text(Fact ele) {
		return 'Fact'
	}
	def text(Rule ele) {
		return 'Rule'
	}
	def text(Predicate ele) {
		return 'Predicate'
	}
	def text(Functor ele) {
		return 'Functor: ' +ele.name
	}
	def text(Term ele) {
		return 'Term'
	}
	def text(Atom ele) {
		return 'Atom: ' +ele.at
	}
	def text(List ele) {
		return 'List'
	}
	def text(Rest ele) {
		return 'Rest'
	}
	def text(ListOpt1 ele) {
		return 'ListOpt1'
	}
	def text(ListOpt2 ele) {
		return 'ListOpt2'
	}
	def text(ListOpt3 ele) {
		return 'ListOpt3'
	}
	def text(Folge ele) {
		return 'Folge'
	}

}
